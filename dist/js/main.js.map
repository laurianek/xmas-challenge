{"version":3,"sources":["main.js","arrayForEachPolyfill.js","arrayReducePolyfill.js"],"names":["Array","prototype","forEach","callback","thisArg","T","k","this","TypeError","O","Object","len","length","arguments","kValue","call","reduce","value","t"],"mappings":"AAAA,YCEKA,OAAMC,UAAUC,UAEnBF,MAAMC,UAAUC,QAAU,SAASC,EAAUC,GAE3C,GAAIC,GAAGC,CAEP,IAAY,MAARC,KACF,KAAM,IAAIC,WAAU,+BACrB,IAGGC,GAAIC,OAAOH,MAIXI,EAAMF,EAAEG,SAAW,CAAE,IAID,kBAAbT,GACT,KAAM,IAAIK,WAAUL,EAAW,qBAS3B,KALFU,UAAUD,OAAS,IACrBP,EAAID,GACLE,EAGG,EAGOK,EAAJL,GAAS,CAEd,GAAIQ,EAOAR,KAAKG,KAGPK,EAASL,EAAEH,GAAGH,EAILY,KAAKV,EAAGS,EAAQR,EAAGG,IAC7BH,OCjDFN,MAAMC,UAAUe,SACnBhB,MAAMC,UAAUe,OAAS,SAASb,GAEhC,GAAY,MAARI,KACF,KAAM,IAAIC,WAAU,qDAEtB,IAAwB,kBAAbL,GACT,KAAM,IAAIK,WAAUL,EAAW,qBAEjC,IAAmDc,GAA/CC,EAAIR,OAAOH,MAAOI,EAAMO,EAAEN,SAAW,EAAGN,EAAI,CAChD,IAAwB,GAApBO,UAAUD,OACZK,EAAQJ,UAAU,OACb,CACL,KAAWF,EAAJL,KAAaA,IAAKY,KACvBZ,GAEF,IAAIA,GAAKK,EACP,KAAM,IAAIH,WAAU,8CAEtBS,GAAQC,EAAEZ,KAEZ,KAAWK,EAAJL,EAASA,IACVA,IAAKY,KACPD,EAAQd,EAASc,EAAOC,EAAEZ,GAAIA,EAAGY,GAGrC,OAAOD","file":"main.js","sourcesContent":["'use strict';\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n\n  Array.prototype.forEach = function (callback, thisArg) {\n\n    var T, k;\n\n    if (this == null) {\n      throw new TypeError(' this is null or not defined');\n    }\n\n    // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n    var O = Object(this);\n\n    // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n    // 3. Let len be ToUint32(lenValue).\n    var len = O.length >>> 0;\n\n    // 4. If IsCallable(callback) is false, throw a TypeError exception.\n    // See: http://es5.github.com/#x9.11\n    if (typeof callback !== \"function\") {\n      throw new TypeError(callback + ' is not a function');\n    }\n\n    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n    if (arguments.length > 1) {\n      T = thisArg;\n    }\n\n    // 6. Let k be 0\n    k = 0;\n\n    // 7. Repeat, while k < len\n    while (k < len) {\n\n      var kValue;\n\n      // a. Let Pk be ToString(k).\n      //   This is implicit for LHS operands of the in operator\n      // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n      //   This step can be combined with c\n      // c. If kPresent is true, then\n      if (k in O) {\n\n        // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n        kValue = O[k];\n\n        // ii. Call the Call internal method of callback with T as the this value and\n        // argument list containing kValue, k, and O.\n        callback.call(T, kValue, k, O);\n      }\n      // d. Increase k by 1.\n      k++;\n    }\n    // 8. return undefined\n  };\n}\n'use strict';\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.21\n// Reference: http://es5.github.io/#x15.4.4.21\nif (!Array.prototype.reduce) {\n  Array.prototype.reduce = function (callback /*, initialValue*/) {\n    'use strict';\n\n    if (this == null) {\n      throw new TypeError('Array.prototype.reduce called on null or undefined');\n    }\n    if (typeof callback !== 'function') {\n      throw new TypeError(callback + ' is not a function');\n    }\n    var t = Object(this),\n        len = t.length >>> 0,\n        k = 0,\n        value;\n    if (arguments.length == 2) {\n      value = arguments[1];\n    } else {\n      while (k < len && !(k in t)) {\n        k++;\n      }\n      if (k >= len) {\n        throw new TypeError('Reduce of empty array with no initial value');\n      }\n      value = t[k++];\n    }\n    for (; k < len; k++) {\n      if (k in t) {\n        value = callback(value, t[k], k, t);\n      }\n    }\n    return value;\n  };\n}","// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n\n  Array.prototype.forEach = function(callback, thisArg) {\n\n    var T, k;\n\n    if (this == null) {\n      throw new TypeError(' this is null or not defined');\n    }\n\n    // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n    var O = Object(this);\n\n    // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n    // 3. Let len be ToUint32(lenValue).\n    var len = O.length >>> 0;\n\n    // 4. If IsCallable(callback) is false, throw a TypeError exception.\n    // See: http://es5.github.com/#x9.11\n    if (typeof callback !== \"function\") {\n      throw new TypeError(callback + ' is not a function');\n    }\n\n    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n    if (arguments.length > 1) {\n      T = thisArg;\n    }\n\n    // 6. Let k be 0\n    k = 0;\n\n    // 7. Repeat, while k < len\n    while (k < len) {\n\n      var kValue;\n\n      // a. Let Pk be ToString(k).\n      //   This is implicit for LHS operands of the in operator\n      // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n      //   This step can be combined with c\n      // c. If kPresent is true, then\n      if (k in O) {\n\n        // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n        kValue = O[k];\n\n        // ii. Call the Call internal method of callback with T as the this value and\n        // argument list containing kValue, k, and O.\n        callback.call(T, kValue, k, O);\n      }\n      // d. Increase k by 1.\n      k++;\n    }\n    // 8. return undefined\n  };\n}","// Production steps of ECMA-262, Edition 5, 15.4.4.21\n// Reference: http://es5.github.io/#x15.4.4.21\nif (!Array.prototype.reduce) {\n  Array.prototype.reduce = function(callback /*, initialValue*/) {\n    'use strict';\n    if (this == null) {\n      throw new TypeError('Array.prototype.reduce called on null or undefined');\n    }\n    if (typeof callback !== 'function') {\n      throw new TypeError(callback + ' is not a function');\n    }\n    var t = Object(this), len = t.length >>> 0, k = 0, value;\n    if (arguments.length == 2) {\n      value = arguments[1];\n    } else {\n      while (k < len && !(k in t)) {\n        k++;\n      }\n      if (k >= len) {\n        throw new TypeError('Reduce of empty array with no initial value');\n      }\n      value = t[k++];\n    }\n    for (; k < len; k++) {\n      if (k in t) {\n        value = callback(value, t[k], k, t);\n      }\n    }\n    return value;\n  };\n}"],"sourceRoot":"/source/"}