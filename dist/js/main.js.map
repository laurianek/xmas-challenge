{"version":3,"sources":["app.js","grid.js","player.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["'use strict';\n\nvar app = angular.module('tictactoe', []);\n\napp.constant('GameConst', {\n  NOUGHT: 'nought',\n  CROSS: 'cross',\n  NOUGHT_CLASS: 'symbol-nought',\n  CROSS_CLASS: 'symbol-cross'\n});\n\napp.controller('mainCtrl', function($scope, GameConst) {\n  var grid = new Grid();\n  var player1 = new Player('Player 1', {\n    symbol: GameConst.NOUGHT,\n    _class: GameConst.NOUGHT_CLASS\n  });\n  var player2 = new Player('Player 2', {\n    symbol: GameConst.CROSS,\n    _class: GameConst.CROSS_CLASS\n  });\n  var isPlayer1Turn = true;\n  $scope.grid = grid;\n  $scope.players = [player1, player2];\n  $scope.config = {\n    colour: 'colour',\n    symbol: 'marker',\n    score: 'score'\n  };\n  $scope.isCurrentPlayer = isCurrentPlayer;\n  $scope.mark = mark;\n\n  /*\n  var playerTurn = player1;\n  grid onclick(function() {\n    mark grid;\n    check if won (only check for the last game move, be lazy)\n    if won then give score and end game;\n    else next player turn;\n  })\n  // */\n\n  function mark(row, col) {\n    var success = grid.mark({row: row, col: col}, currentPlayer().marker);\n    if(!success) {\n      //notify the user that marking failed\n      return;\n    }\n    //check if won (only check for the last game move, be lazy)\n    changePlayer();\n  }\n  function currentPlayer() {\n    return isPlayer1Turn? player1 : player2;\n  }\n  function changePlayer() {\n    return isPlayer1Turn = !isPlayer1Turn;\n  }\n  function isCurrentPlayer(player) {\n    return player.marker === currentPlayer().marker;\n  }\n});","'use strict';\n\nclass Grid {\n  constructor(square = 3) {\n    this.square = square;\n    this.grid = [];\n    this.gameOver = false;\n    for (let row = 0; row < this.square; row++) {\n      this.grid[row] = [];\n      for (let col = 0; col < this.square; col++) {\n        this.grid[row][col] = null;\n      }\n    }\n  }\n  mark(position, marker) {\n    if (this.gameOver) {\n      return false;\n    }\n    if (!this.withinGridBounds(position) || this.isAlreayMarked(position)) {\n      return false;\n    }\n    this.grid[position.row][position.col] = marker;\n    this.gameOver = this.gameWon(position).isGameWon;\n    return true;\n  }\n  withinGridBounds(position) {\n    return (position.row >= 0 && position.row < this.square) &&\n      (position.col >= 0 && position.col < this.square);\n  }\n  isAlreayMarked(position) {\n    return this.grid[position.row][position.col];\n  }\n  gameWon(position) {\n    var currentMark = this.isAlreayMarked(position);\n    var lWin = this.linearWin(position, currentMark);\n    var dWin = this.diagonalWin(position, currentMark);\n    console.log(lWin, dWin);\n    if (lWin || dWin) {\n      return {\n        isGameWon: true,\n        winType: dWin? dWin : lWin\n      };\n    }\n    return {\n      isGameWon: false,\n      winType: ''\n    };\n  }\n  linearWin(position, mark) {\n    var colWin = true;\n    var rowWin = true;\n    var cell1, cell2;\n    for (let i = 0; i < this.square; i++) {\n      cell1 = this.grid[position.row][i];\n      cell2 = this.grid[i][position.col];\n      if (!cell1 || cell1.symbol !== mark.symbol) {\n        rowWin = false;\n      }\n      if (!cell2 || cell2.symbol !== mark.symbol) {\n        colWin = false;\n      }\n    }\n    if (colWin) { return Grid.enum().VT_WIN; }\n    if (rowWin) { return Grid.enum().HZ_WIN; }\n    return false;\n  }\n  diagonalWin(position, mark) {\n    if (position.row != position.col) {\n      return false;\n    }\n    var lhdWin = true;\n    var rhdWin = true;\n    var cell1, cell2;\n    for (let i = 0, j = this.square; i < this.square; i++, j--) {\n      cell1 = this.grid[i][i];\n      cell2 = this.grid[i][j];\n      if (!cell1 || cell1.symbol !== mark.symbol) {\n        lhdWin = false;\n      }\n      if (!cell2 || cell2.symbol !== mark.symbol) {\n        rhdWin = false;\n      }\n    }\n    if (lhdWin) { return Grid.enum().LHD_WIN; }\n    if (rhdWin) { return Grid.enum().RHD_WIN; }\n    return false;\n  }\n  static enum() {\n    return {\n      HZ_WIN: 'horizontal win',\n      VT_WIN: 'vertical win',\n      LHD_WIN: 'left hand-side diagonal win',\n      RHD_WIN: 'right hand-side diagonal win'\n    }\n  }\n}","'use strict';\n\nclass Player {\n  constructor (name, marker, score = 0) {\n    this.name = name;\n    this.marker = marker;\n    this.score = score;\n  }\n\n  addPoints(_point) {\n    var point = Number(_point);\n    if(point) {\n      this.score += point\n    }\n  }\n}"],"sourceRoot":"/source/"}